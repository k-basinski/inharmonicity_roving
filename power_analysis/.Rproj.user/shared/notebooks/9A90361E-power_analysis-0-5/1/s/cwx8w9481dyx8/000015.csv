"0","library(lme4)"
"0",""
"0","pwr_calc <- function(b0,b1,b0_sd,res_sd,nsims,ssizes) {"
"0","  # intialize data frame to store the output "
"0","  pwr <- data.frame() "
"0","  "
"0","  for (s in 1:length(ssizes)) {"
"0","    for (n in 1:nsims) {"
"0","      # df index"
"0","      idx <- (s-1) * nsims + n"
"0","      "
"0","      # current sample size"
"0","      ssize <- ssizes[s]"
"0","      "
"0","      # conditions factor"
"0","      conds <- rep(c(0,1,2),ssize)"
"0","      "
"0","      # subject id's"
"0","      subs <- rep(1:ssize, each = length(unique(conds)))"
"0","      "
"0","      # add intercept"
"0","      intercept <- rep(rnorm(ssize,b0,b0_sd), each = length(unique(conds)))"
"0","      "
"0","      # add condition effect"
"0","      conds_effect <- rep(c(0,0,1),ssize)"
"0","      beta1 <- rep(b1,each= length(unique(conds)))*conds_effect"
"0","      "
"0","      # add residual noise"
"0","      residuals <- rnorm(length(subs),0,res_sd)"
"0","      "
"0","      # collect in a dataframe and calculate simulated measured outcome (y)"
"0","      d <- data.frame('cond' = as.character(conds), "
"0","                      'sub' = subs,"
"0","                      'b0' = intercept,"
"0","                      'b1' = beta1,"
"0","                      'res' = residuals,"
"0","                      'y' = intercept + beta1 + residuals)"
"0","      "
"0","      # fit models"
"0","      m0 <- lmer(y~1 + (1|sub), data = d, REML = FALSE)"
"0","      m1 <- lmer(y~cond + (1|sub), data = d, REML = FALSE)"
"0","      "
"0","      # perform likelihood ratio test"
"0","      test <- anova(m0,m1)"
"0","      "
"0","      #store output of simulation"
"0","      pwr[idx,'sim'] <- n"
"0","      pwr[idx, 'ssize'] <- ssize"
"0","      pwr[idx, 'b0'] <- summary(m1)$coefficients[1]"
"0","      pwr[idx, 'b1'] <- summary(m1)$coefficients[2]"
"0","      pwr[idx, 'sd_int'] <- attr(summary(m1)$varcor$sub,""stddev"") "
"0","      pwr[idx, 'sd_res'] <- summary(m1)$sigma"
"0","      pwr[idx, 'x2'] <- test$Chisq[2]"
"0","      pwr[idx, 'p'] <- test$`Pr(>Chisq)`[2]"
"0","    }"
"0","  }"
"0","  return(pwr)"
"0","}"
"0",""
